<?php
/**
 * DigitalResource
 *
 * PHP version 5
 *
 * @category Class
 * @package  Thip
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ThiemeMeulenhoff Content API
 *
 * Concept of an API to get the content from the publication service.
 *
 * OpenAPI spec version: 0.8.5
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Thip\Model;

use \ArrayAccess;
use \Thip\ObjectSerializer;

/**
 * DigitalResource Class Doc Comment
 *
 * @category Class
 * @package  Thip
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DigitalResource implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'DigitalResource';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'content_identifier' => 'string',
        'thed_content_identifier' => 'string',
        'digital_resource_type' => 'string',
        'language' => 'string',
        'intendedend_user_role' => 'string',
        'typical_learning_time' => 'string',
        'learning_level' => 'string',
        'lam_cells' => '\Thip\Model\LamCellRef[]',
        'title' => 'string',
        'short_title' => 'string',
        'label' => 'string',
        'position' => 'int',
        'number' => 'string',
        'background_image' => 'string',
        'parent' => 'object',
        'children' => '\Thip\Model\DigitalResource[]',
        'related_digital_resources' => '\Thip\Model\DigitalResourceRef[]',
        'terms_refs' => '\Thip\Model\TermRef[]',
        'keywords' => 'string[]',
        'template' => 'string',
        'content' => 'string',
        'assets' => 'object',
        'methods' => 'object',
        'thiemo_keywords' => 'object',
        'thiemo_tags' => 'object',
        'thiemo_subject' => 'string',
        'thiemo_method' => 'string',
        'thiemo_year' => 'string',
        'thiemo_schooltas_isbn' => 'string',
        'thiemo_schooltas_page' => 'string',
        'thiemo_content_type' => 'string',
        'thiemo_is_locked' => 'bool',
        'thiemo_source_logo' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'content_identifier' => null,
        'thed_content_identifier' => null,
        'digital_resource_type' => null,
        'language' => null,
        'intendedend_user_role' => null,
        'typical_learning_time' => null,
        'learning_level' => null,
        'lam_cells' => null,
        'title' => null,
        'short_title' => null,
        'label' => null,
        'position' => null,
        'number' => null,
        'background_image' => null,
        'parent' => null,
        'children' => null,
        'related_digital_resources' => null,
        'terms_refs' => null,
        'keywords' => null,
        'template' => null,
        'content' => null,
        'assets' => null,
        'methods' => null,
        'thiemo_keywords' => null,
        'thiemo_tags' => null,
        'thiemo_subject' => null,
        'thiemo_method' => null,
        'thiemo_year' => null,
        'thiemo_schooltas_isbn' => null,
        'thiemo_schooltas_page' => null,
        'thiemo_content_type' => null,
        'thiemo_is_locked' => null,
        'thiemo_source_logo' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'content_identifier' => 'contentIdentifier',
        'thed_content_identifier' => 'thedContentIdentifier',
        'digital_resource_type' => 'digitalResourceType',
        'language' => 'language',
        'intendedend_user_role' => 'intendedendUserRole',
        'typical_learning_time' => 'typicalLearningTime',
        'learning_level' => 'learningLevel',
        'lam_cells' => 'lamCells',
        'title' => 'title',
        'short_title' => 'shortTitle',
        'label' => 'label',
        'position' => 'position',
        'number' => 'number',
        'background_image' => 'backgroundImage',
        'parent' => 'parent',
        'children' => 'children',
        'related_digital_resources' => 'relatedDigitalResources',
        'terms_refs' => 'termsRefs',
        'keywords' => 'keywords',
        'template' => 'template',
        'content' => 'content',
        'assets' => 'assets',
        'methods' => 'methods',
        'thiemo_keywords' => 'thiemoKeywords',
        'thiemo_tags' => 'thiemoTags',
        'thiemo_subject' => 'thiemoSubject',
        'thiemo_method' => 'thiemoMethod',
        'thiemo_year' => 'thiemoYear',
        'thiemo_schooltas_isbn' => 'thiemoSchooltasISBN',
        'thiemo_schooltas_page' => 'thiemoSchooltasPage',
        'thiemo_content_type' => 'thiemoContentType',
        'thiemo_is_locked' => 'thiemoIsLocked',
        'thiemo_source_logo' => 'thiemoSourceLogo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'content_identifier' => 'setContentIdentifier',
        'thed_content_identifier' => 'setThedContentIdentifier',
        'digital_resource_type' => 'setDigitalResourceType',
        'language' => 'setLanguage',
        'intendedend_user_role' => 'setIntendedendUserRole',
        'typical_learning_time' => 'setTypicalLearningTime',
        'learning_level' => 'setLearningLevel',
        'lam_cells' => 'setLamCells',
        'title' => 'setTitle',
        'short_title' => 'setShortTitle',
        'label' => 'setLabel',
        'position' => 'setPosition',
        'number' => 'setNumber',
        'background_image' => 'setBackgroundImage',
        'parent' => 'setParent',
        'children' => 'setChildren',
        'related_digital_resources' => 'setRelatedDigitalResources',
        'terms_refs' => 'setTermsRefs',
        'keywords' => 'setKeywords',
        'template' => 'setTemplate',
        'content' => 'setContent',
        'assets' => 'setAssets',
        'methods' => 'setMethods',
        'thiemo_keywords' => 'setThiemoKeywords',
        'thiemo_tags' => 'setThiemoTags',
        'thiemo_subject' => 'setThiemoSubject',
        'thiemo_method' => 'setThiemoMethod',
        'thiemo_year' => 'setThiemoYear',
        'thiemo_schooltas_isbn' => 'setThiemoSchooltasIsbn',
        'thiemo_schooltas_page' => 'setThiemoSchooltasPage',
        'thiemo_content_type' => 'setThiemoContentType',
        'thiemo_is_locked' => 'setThiemoIsLocked',
        'thiemo_source_logo' => 'setThiemoSourceLogo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'content_identifier' => 'getContentIdentifier',
        'thed_content_identifier' => 'getThedContentIdentifier',
        'digital_resource_type' => 'getDigitalResourceType',
        'language' => 'getLanguage',
        'intendedend_user_role' => 'getIntendedendUserRole',
        'typical_learning_time' => 'getTypicalLearningTime',
        'learning_level' => 'getLearningLevel',
        'lam_cells' => 'getLamCells',
        'title' => 'getTitle',
        'short_title' => 'getShortTitle',
        'label' => 'getLabel',
        'position' => 'getPosition',
        'number' => 'getNumber',
        'background_image' => 'getBackgroundImage',
        'parent' => 'getParent',
        'children' => 'getChildren',
        'related_digital_resources' => 'getRelatedDigitalResources',
        'terms_refs' => 'getTermsRefs',
        'keywords' => 'getKeywords',
        'template' => 'getTemplate',
        'content' => 'getContent',
        'assets' => 'getAssets',
        'methods' => 'getMethods',
        'thiemo_keywords' => 'getThiemoKeywords',
        'thiemo_tags' => 'getThiemoTags',
        'thiemo_subject' => 'getThiemoSubject',
        'thiemo_method' => 'getThiemoMethod',
        'thiemo_year' => 'getThiemoYear',
        'thiemo_schooltas_isbn' => 'getThiemoSchooltasIsbn',
        'thiemo_schooltas_page' => 'getThiemoSchooltasPage',
        'thiemo_content_type' => 'getThiemoContentType',
        'thiemo_is_locked' => 'getThiemoIsLocked',
        'thiemo_source_logo' => 'getThiemoSourceLogo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['content_identifier'] = isset($data['content_identifier']) ? $data['content_identifier'] : null;
        $this->container['thed_content_identifier'] = isset($data['thed_content_identifier']) ? $data['thed_content_identifier'] : null;
        $this->container['digital_resource_type'] = isset($data['digital_resource_type']) ? $data['digital_resource_type'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['intendedend_user_role'] = isset($data['intendedend_user_role']) ? $data['intendedend_user_role'] : null;
        $this->container['typical_learning_time'] = isset($data['typical_learning_time']) ? $data['typical_learning_time'] : null;
        $this->container['learning_level'] = isset($data['learning_level']) ? $data['learning_level'] : null;
        $this->container['lam_cells'] = isset($data['lam_cells']) ? $data['lam_cells'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['short_title'] = isset($data['short_title']) ? $data['short_title'] : null;
        $this->container['label'] = isset($data['label']) ? $data['label'] : null;
        $this->container['position'] = isset($data['position']) ? $data['position'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['background_image'] = isset($data['background_image']) ? $data['background_image'] : null;
        $this->container['parent'] = isset($data['parent']) ? $data['parent'] : null;
        $this->container['children'] = isset($data['children']) ? $data['children'] : null;
        $this->container['related_digital_resources'] = isset($data['related_digital_resources']) ? $data['related_digital_resources'] : null;
        $this->container['terms_refs'] = isset($data['terms_refs']) ? $data['terms_refs'] : null;
        $this->container['keywords'] = isset($data['keywords']) ? $data['keywords'] : null;
        $this->container['template'] = isset($data['template']) ? $data['template'] : null;
        $this->container['content'] = isset($data['content']) ? $data['content'] : null;
        $this->container['assets'] = isset($data['assets']) ? $data['assets'] : null;
        $this->container['methods'] = isset($data['methods']) ? $data['methods'] : null;
        $this->container['thiemo_keywords'] = isset($data['thiemo_keywords']) ? $data['thiemo_keywords'] : null;
        $this->container['thiemo_tags'] = isset($data['thiemo_tags']) ? $data['thiemo_tags'] : null;
        $this->container['thiemo_subject'] = isset($data['thiemo_subject']) ? $data['thiemo_subject'] : null;
        $this->container['thiemo_method'] = isset($data['thiemo_method']) ? $data['thiemo_method'] : null;
        $this->container['thiemo_year'] = isset($data['thiemo_year']) ? $data['thiemo_year'] : null;
        $this->container['thiemo_schooltas_isbn'] = isset($data['thiemo_schooltas_isbn']) ? $data['thiemo_schooltas_isbn'] : null;
        $this->container['thiemo_schooltas_page'] = isset($data['thiemo_schooltas_page']) ? $data['thiemo_schooltas_page'] : null;
        $this->container['thiemo_content_type'] = isset($data['thiemo_content_type']) ? $data['thiemo_content_type'] : null;
        $this->container['thiemo_is_locked'] = isset($data['thiemo_is_locked']) ? $data['thiemo_is_locked'] : null;
        $this->container['thiemo_source_logo'] = isset($data['thiemo_source_logo']) ? $data['thiemo_source_logo'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets content_identifier
     *
     * @return string|null
     */
    public function getContentIdentifier()
    {
        return $this->container['content_identifier'];
    }

    /**
     * Sets content_identifier
     *
     * @param string|null $content_identifier The content identifier of the digital resource.
     *
     * @return $this
     */
    public function setContentIdentifier($content_identifier)
    {
        $this->container['content_identifier'] = $content_identifier;

        return $this;
    }

    /**
     * Gets thed_content_identifier
     *
     * @return string|null
     */
    public function getThedContentIdentifier()
    {
        return $this->container['thed_content_identifier'];
    }

    /**
     * Sets thed_content_identifier
     *
     * @param string|null $thed_content_identifier The content identifier of the digital resource.
     *
     * @return $this
     */
    public function setThedContentIdentifier($thed_content_identifier)
    {
        $this->container['thed_content_identifier'] = $thed_content_identifier;

        return $this;
    }

    /**
     * Gets digital_resource_type
     *
     * @return string|null
     */
    public function getDigitalResourceType()
    {
        return $this->container['digital_resource_type'];
    }

    /**
     * Sets digital_resource_type
     *
     * @param string|null $digital_resource_type Type of digital content.
     *
     * @return $this
     */
    public function setDigitalResourceType($digital_resource_type)
    {
        $this->container['digital_resource_type'] = $digital_resource_type;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string|null $language The language of the content.
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets intendedend_user_role
     *
     * @return string|null
     */
    public function getIntendedendUserRole()
    {
        return $this->container['intendedend_user_role'];
    }

    /**
     * Sets intendedend_user_role
     *
     * @param string|null $intendedend_user_role The intendedendUserRole.
     *
     * @return $this
     */
    public function setIntendedendUserRole($intendedend_user_role)
    {
        $this->container['intendedend_user_role'] = $intendedend_user_role;

        return $this;
    }

    /**
     * Gets typical_learning_time
     *
     * @return string|null
     */
    public function getTypicalLearningTime()
    {
        return $this->container['typical_learning_time'];
    }

    /**
     * Sets typical_learning_time
     *
     * @param string|null $typical_learning_time The typicallearningtime.
     *
     * @return $this
     */
    public function setTypicalLearningTime($typical_learning_time)
    {
        $this->container['typical_learning_time'] = $typical_learning_time;

        return $this;
    }

    /**
     * Gets learning_level
     *
     * @return string|null
     */
    public function getLearningLevel()
    {
        return $this->container['learning_level'];
    }

    /**
     * Sets learning_level
     *
     * @param string|null $learning_level The user learning level.
     *
     * @return $this
     */
    public function setLearningLevel($learning_level)
    {
        $this->container['learning_level'] = $learning_level;

        return $this;
    }

    /**
     * Gets lam_cells
     *
     * @return \Thip\Model\LamCellRef[]|null
     */
    public function getLamCells()
    {
        return $this->container['lam_cells'];
    }

    /**
     * Sets lam_cells
     *
     * @param \Thip\Model\LamCellRef[]|null $lam_cells Smart metadata.
     *
     * @return $this
     */
    public function setLamCells($lam_cells)
    {
        $this->container['lam_cells'] = $lam_cells;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title the title of the content.
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets short_title
     *
     * @return string|null
     */
    public function getShortTitle()
    {
        return $this->container['short_title'];
    }

    /**
     * Sets short_title
     *
     * @param string|null $short_title the short title of the content.
     *
     * @return $this
     */
    public function setShortTitle($short_title)
    {
        $this->container['short_title'] = $short_title;

        return $this;
    }

    /**
     * Gets label
     *
     * @return string|null
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param string|null $label The navigation label.
     *
     * @return $this
     */
    public function setLabel($label)
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets position
     *
     * @return int|null
     */
    public function getPosition()
    {
        return $this->container['position'];
    }

    /**
     * Sets position
     *
     * @param int|null $position position
     *
     * @return $this
     */
    public function setPosition($position)
    {
        $this->container['position'] = $position;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string|null
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string|null $number The number label of the content.
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets background_image
     *
     * @return string|null
     */
    public function getBackgroundImage()
    {
        return $this->container['background_image'];
    }

    /**
     * Sets background_image
     *
     * @param string|null $background_image The background image.
     *
     * @return $this
     */
    public function setBackgroundImage($background_image)
    {
        $this->container['background_image'] = $background_image;

        return $this;
    }

    /**
     * Gets parent
     *
     * @return object|null
     */
    public function getParent()
    {
        return $this->container['parent'];
    }

    /**
     * Sets parent
     *
     * @param object|null $parent Single parent DigitalResource.
     *
     * @return $this
     */
    public function setParent($parent)
    {
        $this->container['parent'] = $parent;

        return $this;
    }

    /**
     * Gets children
     *
     * @return \Thip\Model\DigitalResource[]|null
     */
    public function getChildren()
    {
        return $this->container['children'];
    }

    /**
     * Sets children
     *
     * @param \Thip\Model\DigitalResource[]|null $children All underlying digital resources.
     *
     * @return $this
     */
    public function setChildren($children)
    {
        $this->container['children'] = $children;

        return $this;
    }

    /**
     * Gets related_digital_resources
     *
     * @return \Thip\Model\DigitalResourceRef[]|null
     */
    public function getRelatedDigitalResources()
    {
        return $this->container['related_digital_resources'];
    }

    /**
     * Sets related_digital_resources
     *
     * @param \Thip\Model\DigitalResourceRef[]|null $related_digital_resources The digital resources that this digital resource refers to.
     *
     * @return $this
     */
    public function setRelatedDigitalResources($related_digital_resources)
    {
        $this->container['related_digital_resources'] = $related_digital_resources;

        return $this;
    }

    /**
     * Gets terms_refs
     *
     * @return \Thip\Model\TermRef[]|null
     */
    public function getTermsRefs()
    {
        return $this->container['terms_refs'];
    }

    /**
     * Sets terms_refs
     *
     * @param \Thip\Model\TermRef[]|null $terms_refs The terms that this digital resource refers to.
     *
     * @return $this
     */
    public function setTermsRefs($terms_refs)
    {
        $this->container['terms_refs'] = $terms_refs;

        return $this;
    }

    /**
     * Gets keywords
     *
     * @return string[]|null
     */
    public function getKeywords()
    {
        return $this->container['keywords'];
    }

    /**
     * Sets keywords
     *
     * @param string[]|null $keywords The prolog/topicmeta Trefwoorden (=keywords) as a simple array of strings.
     *
     * @return $this
     */
    public function setKeywords($keywords)
    {
        $this->container['keywords'] = $keywords;

        return $this;
    }

    /**
     * Gets template
     *
     * @return string|null
     */
    public function getTemplate()
    {
        return $this->container['template'];
    }

    /**
     * Sets template
     *
     * @param string|null $template Template for page display, ex. \"1-wide\".
     *
     * @return $this
     */
    public function setTemplate($template)
    {
        $this->container['template'] = $template;

        return $this;
    }

    /**
     * Gets content
     *
     * @return string|null
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param string|null $content Content self in either xml or html.
     *
     * @return $this
     */
    public function setContent($content)
    {
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets assets
     *
     * @return object|null
     */
    public function getAssets()
    {
        return $this->container['assets'];
    }

    /**
     * Sets assets
     *
     * @param object|null $assets Array of ThamIds.
     *
     * @return $this
     */
    public function setAssets($assets)
    {
        $this->container['assets'] = $assets;

        return $this;
    }

    /**
     * Gets methods
     *
     * @return object|null
     */
    public function getMethods()
    {
        return $this->container['methods'];
    }

    /**
     * Sets methods
     *
     * @param object|null $methods Array of edition methods related to this DigitalResource.
     *
     * @return $this
     */
    public function setMethods($methods)
    {
        $this->container['methods'] = $methods;

        return $this;
    }

    /**
     * Gets thiemo_keywords
     *
     * @return object|null
     */
    public function getThiemoKeywords()
    {
        return $this->container['thiemo_keywords'];
    }

    /**
     * Sets thiemo_keywords
     *
     * @param object|null $thiemo_keywords Array of keywords (strings) for thiemo.
     *
     * @return $this
     */
    public function setThiemoKeywords($thiemo_keywords)
    {
        $this->container['thiemo_keywords'] = $thiemo_keywords;

        return $this;
    }

    /**
     * Gets thiemo_tags
     *
     * @return object|null
     */
    public function getThiemoTags()
    {
        return $this->container['thiemo_tags'];
    }

    /**
     * Sets thiemo_tags
     *
     * @param object|null $thiemo_tags Array of tags (strings) for thiemo.
     *
     * @return $this
     */
    public function setThiemoTags($thiemo_tags)
    {
        $this->container['thiemo_tags'] = $thiemo_tags;

        return $this;
    }

    /**
     * Gets thiemo_subject
     *
     * @return string|null
     */
    public function getThiemoSubject()
    {
        return $this->container['thiemo_subject'];
    }

    /**
     * Sets thiemo_subject
     *
     * @param string|null $thiemo_subject thiemo_subject
     *
     * @return $this
     */
    public function setThiemoSubject($thiemo_subject)
    {
        $this->container['thiemo_subject'] = $thiemo_subject;

        return $this;
    }

    /**
     * Gets thiemo_method
     *
     * @return string|null
     */
    public function getThiemoMethod()
    {
        return $this->container['thiemo_method'];
    }

    /**
     * Sets thiemo_method
     *
     * @param string|null $thiemo_method thiemo_method
     *
     * @return $this
     */
    public function setThiemoMethod($thiemo_method)
    {
        $this->container['thiemo_method'] = $thiemo_method;

        return $this;
    }

    /**
     * Gets thiemo_year
     *
     * @return string|null
     */
    public function getThiemoYear()
    {
        return $this->container['thiemo_year'];
    }

    /**
     * Sets thiemo_year
     *
     * @param string|null $thiemo_year thiemo_year
     *
     * @return $this
     */
    public function setThiemoYear($thiemo_year)
    {
        $this->container['thiemo_year'] = $thiemo_year;

        return $this;
    }

    /**
     * Gets thiemo_schooltas_isbn
     *
     * @return string|null
     */
    public function getThiemoSchooltasIsbn()
    {
        return $this->container['thiemo_schooltas_isbn'];
    }

    /**
     * Sets thiemo_schooltas_isbn
     *
     * @param string|null $thiemo_schooltas_isbn thiemo_schooltas_isbn
     *
     * @return $this
     */
    public function setThiemoSchooltasIsbn($thiemo_schooltas_isbn)
    {
        $this->container['thiemo_schooltas_isbn'] = $thiemo_schooltas_isbn;

        return $this;
    }

    /**
     * Gets thiemo_schooltas_page
     *
     * @return string|null
     */
    public function getThiemoSchooltasPage()
    {
        return $this->container['thiemo_schooltas_page'];
    }

    /**
     * Sets thiemo_schooltas_page
     *
     * @param string|null $thiemo_schooltas_page thiemo_schooltas_page
     *
     * @return $this
     */
    public function setThiemoSchooltasPage($thiemo_schooltas_page)
    {
        $this->container['thiemo_schooltas_page'] = $thiemo_schooltas_page;

        return $this;
    }

    /**
     * Gets thiemo_content_type
     *
     * @return string|null
     */
    public function getThiemoContentType()
    {
        return $this->container['thiemo_content_type'];
    }

    /**
     * Sets thiemo_content_type
     *
     * @param string|null $thiemo_content_type thiemo_content_type
     *
     * @return $this
     */
    public function setThiemoContentType($thiemo_content_type)
    {
        $this->container['thiemo_content_type'] = $thiemo_content_type;

        return $this;
    }

    /**
     * Gets thiemo_is_locked
     *
     * @return bool|null
     */
    public function getThiemoIsLocked()
    {
        return $this->container['thiemo_is_locked'];
    }

    /**
     * Sets thiemo_is_locked
     *
     * @param bool|null $thiemo_is_locked thiemo_is_locked
     *
     * @return $this
     */
    public function setThiemoIsLocked($thiemo_is_locked)
    {
        $this->container['thiemo_is_locked'] = $thiemo_is_locked;

        return $this;
    }

    /**
     * Gets thiemo_source_logo
     *
     * @return string|null
     */
    public function getThiemoSourceLogo()
    {
        return $this->container['thiemo_source_logo'];
    }

    /**
     * Sets thiemo_source_logo
     *
     * @param string|null $thiemo_source_logo thiemo_source_logo
     *
     * @return $this
     */
    public function setThiemoSourceLogo($thiemo_source_logo)
    {
        $this->container['thiemo_source_logo'] = $thiemo_source_logo;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


